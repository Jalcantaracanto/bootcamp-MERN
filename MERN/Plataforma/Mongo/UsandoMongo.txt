Cree una base de datos llamada 'my_first_db'.
	use my_first_db

Crear colección de estudiantes.
	db.createCollection("estudiantes")


Cada documento que inserte en esta colección debe tener el siguiente formato:({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})


Crea 5 estudiantes con la información adecuada.
	db.estudiantes.insertMany([
		{name:"Javier", home_state:"Vina del Mar", lucky_number:17, birthday:{month:11, day:17, year:1992}},
		{name:"Nicole", home_state:"Quintero", lucky_number:01, birthday:{month:07, day:06, year:1990}},
		{name:"Maite", home_state:"Quilpue", lucky_number:2, birthday:{month:14, day:10, year:2010}},
		{name:"Camila", home_state:"Renaca", lucky_number:18,birthday:{month:04, day:17, year: 1995}},
		{name:"Marcela", home_state:"Vina del Mar", lucky_number:100, birthday:{month:21, day:9,year:1964}}
		])

Consigue todos los estudiantes.
	db.estudiantes.find()

Recupera a todos los estudiantes que son de California (San Jose Dojo) o Washington (Seattle Dojo).
	db.estudiantes.find({home_state: { $in: ["Vina del Mar", "Quintero"]}})


Obten todos los estudiantes cuyo número de la suerte sea mayor que 3
	db.estudiantes.find({lucky_number:{$gt:3}})


Obten todos los estudiantes cuyo número de la suerte sea menor o igual a 10
	db.estudiantes.find({lucky_number:{$lte:10}})

Obten todos los estudiantes cuyo número de la suerte esté entre 1 y 9 (inclusive)
	db.estudiantes.find({lucky_number:{$gte:1 , $lte:9}})

Agrega un campo a cada colección de estudiantes llamado 'intereses' que es un ARRAY. Debe contener las siguientes entradas: 'codificación', 'brunch', 'MongoDB'. Haz esto en UNA operación.
	db.estudiantes.updateMany({},{$set:{interes:["codificacion", "bruch","MongoDB"]}})

Agrega algunos intereses únicos para cada estudiante en particular en cada una de sus matrices de intereses.
	db.estudiantes.updateOne({name:"Marcela"},{$set:{interes:["Medicina", "Ismael Serrano", "Musica"]}})
	db.estudiantes.updateOne({name:"Camila"},{$set:{interes:["Viajes", "Animales", "Musica"]}})
	db.estudiantes.updateOne({name:"Maite"},{$set:{interes:["Corea", "Baile", "K-POP"]}})
	db.estudiantes.updateOne({name:"Nicole"},{$set:{interes:["Programacion", "Gaming", "Amigos"]}})

Agrega los 'impuestos' de intereses a la matriz de intereses de alguien.
	db.estudiantes.updateOne({ name: "Nicole" }, { $push: { interes: "impuestos" } })

Elimina los intereses de 'impuestos' que acaba de agregar.
	db.estudiantes.updateOne({ name: "Nicole" }, { $pull: { interes: "impuestos" } })

Eliminar a todos los estudiantes que son de California.
	db.estudiantes.deleteMany({home_state:"Renaca"})

Eliminar a un alumno por su nombre.
	db.estudiantes.deleteOne({name:"Javier"})

Retira a un estudiante cuyo número de la suerte sea mayor que 5 (SOLO UNO)
	db.estudiantes.deleteOne({lucky_number:{$gt:5}})

Agrega un campo a cada colección de estudiantes llamado 'number_of_belts' y configúralo en 0.
	db.estudiantes.updateMany({},{$set:{number_of_belts:0}})

Incrementa este campo en 1 para todos los estudiantes en Washington (Seattle Dojo).
	db.estudiantes.updateMany({home_state:"Vina del Mar"},{$inc:{number_of_belts: 1}})

Cambia el nombre del campo 'number_of_belts' a 'belts_earned'
	db.estudiantes.updateMany({},{$rename: {"number_of_belts":"belts_earned"}} )

Elimina el campo 'lucky_number'.
	db.estudiantes.updateMany({}, { $unset: { "lucky_number": 1 } })

Agrega un campo 'updated_on' y establece el valor como la fecha actual.
	db.estudiantes.updateMany({}, { $currentDate: { updated_on: true } })